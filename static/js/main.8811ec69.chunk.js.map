{"version":3,"sources":["bunny.torrent","../../src/getTorrent.tsx","../../src/index.tsx","../../src/Infinity.gif","App.tsx","index.tsx","atorable.png","bunny.mp4"],"names":["module","exports","client","t","console","loopThroughTorFiles","torrent","manageFile","PromiseTorrent","magnetURI","Promise","torrentCheck","resolve","VidATor","props","videoElement","useRef","useState","urlState","updateUrl","file","err","mngTor","useEffect","React","style","color","poster","width","height","controls","autoPlay","muted","ref","src","type","Copyright","Typography","variant","align","Link","href","Date","getFullYear","useStyles","makeStyles","theme","main","backgroundColor","icon","marginRight","spacing","heroContent","padding","heroButtons","marginTop","cardGrid","paddingTop","paddingBottom","display","justifyContent","card","flexDirection","cardMedia","cardContent","flexGrow","footer","Album","classes","Fragment","CssBaseline","AppBar","position","Toolbar","Public","className","noWrap","Container","maxWidth","component","gutterBottom","CardMedia","image","img","title","paragraph","Grid","container","item","Button","magnetLink","bunnyTor","download","role","left","bunny","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8811ec69.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bunny.97b7255e.torrent\";","/* eslint-disable one-var */\n/* eslint-disable prefer-const */\n// eslint-disable-next-line no-unused-vars\nimport WebTorrent, { Torrent } from 'webtorrent'\nconst client = new WebTorrent()\n\n// TODO: allow build to send file folders to nginx running with volumes mounted that get updated when sent to server\n// Make a service that gives you a .com address and then serves your webpack static code from a nginx server\n// just needs a simple template structure index.html, dist and such\n\nclient.on('error', function (t) {\n  console.log('err', t)\n})\n\nexport const GetTorrent = (\n  magnetURI: string | { default: string },\n  manageTor: (file: WebTorrent.Torrent) => void\n) => {\n  if (typeof magnetURI !== 'string') {\n    magnetURI = magnetURI.default\n  }\n  let torrentCheck = client.get(magnetURI)\n  if (torrentCheck) {\n    let torrent = torrentCheck\n    if (torrent.name) {\n      manageTor(torrent)\n    } else {\n      client.on('torrent', function (t: WebTorrent.Torrent) {\n        if (torrent?.infoHash === t?.infoHash) {\n          manageTor(t)\n        }\n      })\n    }\n  } else {\n    client.add(magnetURI, function (torrent: WebTorrent.Torrent) {\n      manageTor(torrent)\n    })\n  }\n}\n\nexport const loopThroughTorFiles = (\n  torrent: Torrent,\n  manageFile: (file: WebTorrent.TorrentFile) => void\n) => {\n  torrent.files.forEach((file: WebTorrent.TorrentFile) => {\n    manageFile(file)\n  })\n}\n\nexport const PromiseTorrent = (magnetURI: string | { default: string }) => {\n  return new Promise((resolve: (file: WebTorrent.Torrent) => void) => {\n    if (typeof magnetURI !== 'string') {\n      magnetURI = magnetURI.default\n    }\n    let torrentCheck = client.get(magnetURI)\n    if (torrentCheck) {\n      let torrent = torrentCheck\n      if (torrent.name) {\n        resolve(torrent)\n      } else {\n        client.on('torrent', function (t: WebTorrent.Torrent) {\n          if (torrent?.infoHash === t?.infoHash) {\n            resolve(t)\n          }\n        })\n      }\n    } else {\n      client.add(magnetURI, function (torrent: WebTorrent.Torrent) {\n        resolve(torrent)\n      })\n    }\n  })\n}\n","/* eslint-disable one-var */\n/* eslint-disable prefer-const */\nimport * as React from 'react'\nimport { Fragment, useEffect, useState, useRef } from 'react'\n// eslint-disable-next-line no-unused-vars\nimport WebTorrent from 'webtorrent'\nimport { GetTorrent, loopThroughTorFiles, PromiseTorrent } from './getTorrent'\nimport iGif from './Infinity.gif'\n\nexport const getTorrent = GetTorrent\nexport const promiseTorrent = PromiseTorrent\n\nexport const ImgATor = (props: any) => {\n  let [fileState, updateFile] = useState<WebTorrent.TorrentFile>(),\n    [urlState, updateUrl] = useState<string>(),\n    manageFile = (file: WebTorrent.TorrentFile) => {\n      // TODO: this better with more file types and upper and lower cases\n      updateFile(file)\n      file.getBlobURL((err, url) => {\n        if (err) throw err\n        updateUrl(url)\n      })\n    },\n    mngTor = (torrent: WebTorrent.Torrent) => {\n      loopThroughTorFiles(torrent, manageFile)\n    }\n\n  useEffect(() => {\n    PromiseTorrent(props.magnetLink).then(mngTor)\n    return () => {}\n  }, [])\n  return (\n    <Fragment>\n      <img\n        src={urlState}\n        alt={fileState?.name}\n        width={props.width}\n        height={props.height}\n        sizes={props.sizes}\n        style={props.style}\n      />\n    </Fragment>\n  )\n}\n\nexport const VidATor = (props: any) => {\n  const videoElement = useRef(null)\n  let [urlState, updateUrl] = useState<string>(),\n    // [fileState, updateFile] = useState<WebTorrent.TorrentFile>(),\n    manageFile = (file: WebTorrent.TorrentFile) => {\n      // TODO: this better with more file types and upper and lower cases\n      if (file.name.includes(props.type)) {\n        file.getBlobURL((err, url) => {\n          if (err) throw err\n          updateUrl(url)\n        })\n      }\n    },\n    mngTor = (torrent: WebTorrent.Torrent) => {\n      loopThroughTorFiles(torrent, manageFile)\n    }\n\n  useEffect(() => {\n    PromiseTorrent(props.magnetLink).then(mngTor)\n    return () => {}\n  }, [])\n  return (\n    <Fragment>\n      {urlState ? null : (\n        <Fragment>\n          <h2 style={{ color: 'orange' }}>Loading</h2>\n          <br />\n        </Fragment>\n      )}\n      <video\n        poster={iGif} // TODO: make this loading gif work\n        width={props.width}\n        height={props.height}\n        controls\n        autoPlay\n        muted\n        ref={videoElement}\n        src={urlState}\n      >\n        <source type={'video/' + props.type} />\n        Your browser does not support the video tag.\n      </video>\n    </Fragment>\n  )\n}\n\nexport const VidStrmATor = (props: any) => {\n  const videoElement = useRef(null)\n  const opts = {\n    autoplay: props.autoplay,\n    muted: true\n  }\n  let manageFile = (file: WebTorrent.TorrentFile) => {\n      // TODO: this better with more file types and upper and lower cases\n      if (file.name.includes('.mp4')) {\n        // @ts-ignore: Object is possibly 'null'.\n        file.renderTo(videoElement.current, opts, function (err, elem) {\n          if (err) throw err // file failed to download or display in the DOM\n          console.log('New DOM node with the content', elem)\n        })\n      }\n    },\n    mngTor = (torrent: WebTorrent.Torrent) => {\n      loopThroughTorFiles(torrent, manageFile)\n    }\n\n  useEffect(() => {\n    PromiseTorrent(props.magnetLink).then(mngTor)\n    return () => {}\n  }, [])\n  return (\n    <Fragment>\n      <video\n        width={props.width}\n        height={props.height}\n        controls\n        muted\n        ref={videoElement}\n      >\n        <source type='video/mp4' />\n        Your browser does not support the video tag.\n      </video>\n    </Fragment>\n  )\n}\n\nexport const WrapATor = (props: any) => {\n  const { children } = props\n  let [childElements, updateChildElements] = useState<any>(),\n    mngTor = (torrent: WebTorrent.Torrent) => {\n      const chldElements = React.Children.map(children, (child) =>\n        React.cloneElement(child, {\n          torrent: torrent\n        })\n      )\n      updateChildElements(chldElements)\n    }\n\n  useEffect(() => {\n    PromiseTorrent(props.magnetLink).then(mngTor)\n    return () => {}\n  }, [])\n\n  return <Fragment>{childElements}</Fragment>\n}\n\nexport const WrappedImgATor = (props: any) => {\n  let [fileState, updateFile] = useState<WebTorrent.TorrentFile>(),\n    [urlState, updateUrl] = useState<string>(),\n    manageFile = (file: WebTorrent.TorrentFile) => {\n      // TODO: this better with more file types and upper and lower cases\n      updateFile(file)\n      file.getBlobURL((err, url) => {\n        if (err) throw err\n        updateUrl(url)\n      })\n    },\n    mngTor = (torrent: WebTorrent.Torrent) => {\n      loopThroughTorFiles(torrent, manageFile)\n    }\n\n  useEffect(() => {\n    mngTor(props.torrent)\n    return () => {}\n  }, [])\n  return (\n    <Fragment>\n      <img\n        src={urlState}\n        alt={fileState?.name}\n        width={props.width}\n        height={props.height}\n        sizes={props.sizes}\n        style={props.style}\n      />\n    </Fragment>\n  )\n}\n\n// https://stackoverflow.com/questions/51657890/is-it-ok-to-use-a-wrapper-component-to-pass-props-in-react\n","/* loaded by smart-asset */\nexport default \"Infinity~vElNQthJ.gif\"","import {\n  // VidStrmATor\n  // ImgATor,\n  VidATor\n  // WrapATor,\n  // WrappedImgATor\n} from 'atorable-react'\nimport React from 'react'\nimport AppBar from '@material-ui/core/AppBar'\nimport Button from '@material-ui/core/Button'\nimport { Public } from '@material-ui/icons/'\n// import Card from '@material-ui/core/Card'\n// import CardActions from '@material-ui/core/CardActions'\n// import CardContent from '@material-ui/core/CardContent'\nimport CardMedia from '@material-ui/core/CardMedia'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport Grid from '@material-ui/core/Grid'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Container from '@material-ui/core/Container'\nimport Link from '@material-ui/core/Link'\nimport img from './atorable.png'\nimport bunny from './bunny.mp4'\nimport bunnyTor from './bunny.torrent'\n\nfunction Copyright() {\n  return (\n    <Typography variant='body2' color='textSecondary' align='center'>\n      {'Copyright © '}\n      <Link\n        color='inherit'\n        href='https://github.com/sergethompson/atorable-react'\n      >\n        atorable-react\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  )\n}\n\nconst useStyles = makeStyles((theme) => ({\n  main: {\n    backgroundColor: '#bef710' // theme.palette.background.paper,\n  },\n  icon: {\n    marginRight: theme.spacing(2)\n  },\n  heroContent: {\n    backgroundColor: '#bef710', // theme.palette.background.paper,\n    padding: theme.spacing(8, 0, 6)\n    // font: 'helvetica' // movie about this font\n  },\n  heroButtons: {\n    marginTop: theme.spacing(4)\n  },\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8),\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  card: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  cardMedia: {\n    paddingTop: '56.25%' // 16:9\n  },\n  cardContent: {\n    flexGrow: 1\n  },\n  footer: {\n    backgroundColor: '#bef710', // theme.palette.background.paper,\n    padding: theme.spacing(6)\n  }\n}))\n\n// const cards = [1, 2, 3]\n// let imgPath =\n//   'magnet:?xt=urn:btih:dc94d0d5b4a4ca82bbe4d335ddb65ef7ea3de374&dn=DSC4470.jpg&tr=udp%3A%2F%2Ftracker.leechers-paradise.org%3A6969&tr=udp%3A%2F%2Ftracker.coppersurfer.tk%3A6969&tr=udp%3A%2F%2Ftracker.opentrackr.org%3A1337&tr=udp%3A%2F%2Fexplodie.org%3A6969&tr=udp%3A%2F%2Ftracker.empire-js.us%3A1337&tr=wss%3A%2F%2Ftracker.btorrent.xyz&tr=wss%3A%2F%2Ftracker.openwebtorrent.com&ws=http%3A%2F%2Flocalhost%3A8080%2Fassets%2Fimg%2FDSC4470.jpg&xs=http%3A%2F%2Flocalhost%3A8080%2Fassets%2Fimg%2FDSC4470.torrent'\n// let sintel =\n//   'magnet:?xt=urn:btih:08ada5a7a6183aae1e09d831df6748d566095a10&dn=Sintel&tr=udp%3A%2F%2Fexplodie.org%3A6969&tr=udp%3A%2F%2Ftracker.coppersurfer.tk%3A6969&tr=udp%3A%2F%2Ftracker.empire-js.us%3A1337&tr=udp%3A%2F%2Ftracker.leechers-paradise.org%3A6969&tr=udp%3A%2F%2Ftracker.opentrackr.org%3A1337&tr=wss%3A%2F%2Ftracker.btorrent.xyz&tr=wss%3A%2F%2Ftracker.fastcast.nz&tr=wss%3A%2F%2Ftracker.openwebtorrent.com&ws=https%3A%2F%2Fwebtorrent.io%2Ftorrents%2F&xs=https%3A%2F%2Fwebtorrent.io%2Ftorrents%2Fsintel.torrent'\n// let oceanFish =\n//   'magnet:?xt=urn:btih:17a613e4a81e52cf41cab72157a24faecaa8f2f5&dn=GOPR0093.mp4&tr=udp%3A%2F%2Ftracker.leechers-paradise.org%3A6969&tr=udp%3A%2F%2Ftracker.coppersurfer.tk%3A6969&tr=udp%3A%2F%2Ftracker.opentrackr.org%3A1337&tr=udp%3A%2F%2Fexplodie.org%3A6969&tr=udp%3A%2F%2Ftracker.empire-js.us%3A1337&tr=wss%3A%2F%2Ftracker.btorrent.xyz&tr=wss%3A%2F%2Ftracker.openwebtorrent.com&ws=http%3A%2F%2Flocalhost%3A8080%2Fassets%2Fimg%2FGOPR0093.mp4&xs=http%3A%2F%2Flocalhost%3A8080%2Fassets%2Fimg%2FGOPR0093.torrent'\nlet bunnyMagnet =\n  'magnet:?xt=urn:btih:2bd1f18edf0503c435a93aa8891e8c9b07eb87b2&dn=bunny.59b8487d.mp4&tr=udp%3A%2F%2Ftracker.leechers-paradise.org%3A6969&tr=udp%3A%2F%2Ftracker.coppersurfer.tk%3A6969&tr=udp%3A%2F%2Ftracker.opentrackr.org%3A1337&tr=udp%3A%2F%2Fexplodie.org%3A6969&tr=udp%3A%2F%2Ftracker.empire-js.us%3A1337&tr=wss%3A%2F%2Ftracker.btorrent.xyz&tr=wss%3A%2F%2Ftracker.openwebtorrent.com&ws=https%3A%2F%2Fatorable.github.io%2Fatorable-react%2Fstatic%2Fmedia%2Fbunny.59b8487d.mp4&xs=https%3A%2F%2Fatorable.github.io%2Fatorable-react%2Fstatic%2Fmedia%2Fbunny.97b7255e.torrent'\nexport default function Album() {\n  const classes = useStyles()\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <AppBar position='relative'>\n        <Toolbar>\n          <Public className={classes.icon} />\n          <Typography variant='h6' color='inherit' noWrap>\n            atorable-react\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <main className={classes.main}>\n        {/* Hero unit */}\n        <div className={classes.heroContent}>\n          <Container maxWidth='sm'>\n            <Typography\n              component='h1'\n              variant='h2'\n              align='center'\n              color='textPrimary'\n              gutterBottom\n            >\n              atorable-react\n            </Typography>\n            <CardMedia\n              className={classes.cardMedia}\n              image={img}\n              title='atorable-react'\n            />\n            <Typography\n              variant='h5'\n              align='center'\n              color='textSecondary'\n              paragraph\n            >\n              React component that processes a{' '}\n              <Link color='inherit' href='https://webtorrent.io/'>\n                Webtorrent\n              </Link>{' '}\n              magnet uri and makes the resulting file available for viewing or\n              other custom uses.\n            </Typography>\n            <div className={classes.heroButtons}>\n              <Grid container spacing={2} justifyContent='center'>\n                <Grid item>\n                  <Button variant='contained' color='primary'>\n                    <Link\n                      color='inherit'\n                      href='https://www.npmjs.com/package/atorable-react'\n                    >\n                      NPM\n                    </Link>{' '}\n                  </Button>\n                </Grid>\n                <Grid item>\n                  <Button variant='outlined' color='primary'>\n                    <Link\n                      color='inherit'\n                      href='https://github.com/sergethompson/atorable-react'\n                    >\n                      GITHUB\n                    </Link>{' '}\n                  </Button>\n                </Grid>\n              </Grid>\n            </div>\n          </Container>\n        </div>\n        <Container className={classes.cardGrid} maxWidth='md'>\n          <VidATor\n            width='480'\n            height='360'\n            type={'mp4'}\n            magnetLink={bunnyMagnet}\n          />\n\n          {/* <VidStrmATor\n            width='320'\n            height='240'\n            autoplay={true}\n            magnetLink={steel}\n          /> */}\n          {/* <br /> */}\n          {/* <ImgATor magnetLink={imgPath} style={{ border: 'solid' }} /> */}\n\n          {/* <WrapATor magnetLink={imgPath}>\n            <WrappedImgATor />\n          </WrapATor> */}\n        </Container>\n        {/* Card Container below */}\n      </main>\n      {/* Footer */}\n      <footer className={classes.footer}>\n        <Typography variant='h6' align='center' gutterBottom>\n          <a href={bunnyTor} download>\n            <span role='img'>🦶</span>\n          </a>\n        </Typography>\n        <Typography\n          variant='subtitle1'\n          align='center'\n          color='textSecondary'\n          component='p'\n        >\n          If you like this you will <span role='img'>❤️</span>{' '}\n          <Link\n            color='inherit'\n            href='https://github.com/sergethompson/atorable-loader'\n          >\n            atorable-loader\n          </Link>{' '}\n        </Typography>\n        <Copyright />\n        <video\n          style={{ position: 'absolute', left: '-9999px' }}\n          // poster={iGif} // TODO: make this loading gif work\n          // width={props.width}\n          // height={props.height}\n          // controls\n          // autoPlay\n          // muted\n          // ref={videoElement}\n          src={bunny}\n        >\n          <source type={'video/mp4'} />\n          Your browser does not support the video tag.\n        </video>\n      </footer>\n      {/* End footer */}\n    </React.Fragment>\n  )\n}\n\n//  <Container className={classes.cardGrid} maxWidth='md'>\n//           {/* End hero unit */}\n//           <Grid container spacing={4}>\n//             {cards.map((card) => (\n//               <Grid item key={card} xs={12} sm={6} md={4}>\n//                 <Card className={classes.card}>\n//                   <CardMedia\n//                     className={classes.cardMedia}\n//                     image={img}\n//                     title='atorable-react'\n//                   />\n//                   <CardContent className={classes.cardContent}>\n//                     <Typography gutterBottom variant='h5' component='h2'>\n//                       Heading\n//                     </Typography>\n//                     <Typography>\n//                       This is a media card. You can use this section to describe\n//                       the content.\n//                     </Typography>\n//                   </CardContent>\n//                   <CardActions>\n//                     <Button size='small' color='primary'>\n//                       View\n//                     </Button>\n//                     <Button size='small' color='primary'>\n//                       Edit\n//                     </Button>\n//                   </CardActions>\n//                 </Card>\n//               </Grid>\n//             ))}\n//           </Grid>\n//         </Container>\n\n// ;<Container className={classes.cardGrid} maxWidth='md'>\n//   {/* End hero unit */}\n//   <Grid container spacing={4}>\n//     <Grid item key={card} xs={12} sm={6} md={4}>\n//       <Card className={classes.card}>\n//         <CardContent className={classes.cardContent}></CardContent>\n//       </Card>\n//     </Grid>\n//   </Grid>\n// </Container>\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n","module.exports = __webpack_public_path__ + \"static/media/atorable.d47c49a3.png\";","module.exports = __webpack_public_path__ + \"static/media/bunny.59b8487d.mp4\";"],"sourceRoot":""}