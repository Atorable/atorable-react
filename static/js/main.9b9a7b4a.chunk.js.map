{"version":3,"sources":["../../src/getTorrent.tsx","../../src/index.tsx","App.tsx","index.tsx"],"names":["client","t","console","GetTorrent","magnetURI","torrentCheck","torrent","manageTor","loopThroughTorFiles","manageFile","ImgATor","props","useState","fileState","updateFile","urlState","updateUrl","file","err","mngTor","useEffect","src","alt","name","width","height","sizes","style","VidATor","videoElement","useRef","React","color","controls","autoPlay","muted","ref","type","VidStrmATor","opts","autoplay","elem","WrapATor","children","childElements","updateChildElements","chldElements","WrappedImgATor","imgPath","App","magnetLink","border","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9b9a7b4a.chunk.js","sourcesContent":["/* eslint-disable one-var */\n/* eslint-disable prefer-const */\n// eslint-disable-next-line no-unused-vars\nimport WebTorrent, { Torrent } from 'webtorrent'\nconst client = new WebTorrent()\n\n// TODO: allow build to send file folders to nginx running with volumes mounted that get updated when sent to server\n// Make a service that gives you a .com address and then serves your webpack static code from a nginx server\n// just needs a simple template structure index.html, dist and such\n\nclient.on('error', function (t) {\n  console.log('err', t)\n})\n\nexport const GetTorrent = (\n  magnetURI: string | { default: string },\n  manageTor: (file: WebTorrent.Torrent) => void\n) => {\n  if (typeof magnetURI !== 'string') {\n    magnetURI = magnetURI.default\n  }\n  let torrentCheck = client.get(magnetURI)\n  if (torrentCheck) {\n    let torrent = torrentCheck\n    if (torrent.name) {\n      manageTor(torrent)\n    } else {\n      client.on('torrent', function (t: WebTorrent.Torrent) {\n        if (torrent?.infoHash === t?.infoHash) {\n          manageTor(t)\n        }\n      })\n    }\n  } else {\n    client.add(magnetURI, function (torrent: WebTorrent.Torrent) {\n      manageTor(torrent)\n    })\n  }\n}\n\nexport const loopThroughTorFiles = (\n  torrent: Torrent,\n  manageFile: (file: WebTorrent.TorrentFile) => void\n) => {\n  torrent.files.forEach((file: WebTorrent.TorrentFile) => {\n    manageFile(file)\n  })\n}\n","/* eslint-disable one-var */\n/* eslint-disable prefer-const */\nimport * as React from 'react'\nimport { Fragment, useEffect, useState, useRef } from 'react'\n// eslint-disable-next-line no-unused-vars\nimport WebTorrent from 'webtorrent'\nimport { GetTorrent, loopThroughTorFiles } from './getTorrent'\n\nexport const getTorrent = GetTorrent\n\nexport const ImgATor = (props: any) => {\n  let [fileState, updateFile] = useState<WebTorrent.TorrentFile>(),\n    [urlState, updateUrl] = useState<string>(),\n    manageFile = (file: WebTorrent.TorrentFile) => {\n      // TODO: this better with more file types and upper and lower cases\n      updateFile(file)\n      file.getBlobURL((err, url) => {\n        if (err) throw err\n        updateUrl(url)\n      })\n    },\n    mngTor = (torrent: WebTorrent.Torrent) => {\n      loopThroughTorFiles(torrent, manageFile)\n    }\n\n  useEffect(() => {\n    GetTorrent(props.magnetLink, mngTor)\n    return () => {}\n  }, [])\n  return (\n    <Fragment>\n      <img\n        src={urlState}\n        alt={fileState?.name}\n        width={props.width}\n        height={props.height}\n        sizes={props.sizes}\n        style={props.style}\n      />\n    </Fragment>\n  )\n}\n\nexport const VidATor = (props: any) => {\n  const videoElement = useRef(null)\n  let [fileState, updateFile] = useState<WebTorrent.TorrentFile>(),\n    [urlState, updateUrl] = useState<string>(),\n    manageFile = (file: WebTorrent.TorrentFile) => {\n      // TODO: this better with more file types and upper and lower cases\n      if (file.name.includes('.mp4')) {\n        updateFile(file)\n        file.getBlobURL((err, url) => {\n          if (err) throw err\n          updateUrl(url)\n        })\n      }\n    },\n    mngTor = (torrent: WebTorrent.Torrent) => {\n      loopThroughTorFiles(torrent, manageFile)\n    }\n\n  useEffect(() => {\n    GetTorrent(props.magnetLink, mngTor)\n    return () => {}\n  }, [])\n  return (\n    <Fragment>\n      {urlState ? null : <h2 style={{ color: 'orange' }}>Loading</h2>}\n      <video\n        width={props.width}\n        height={props.height}\n        controls\n        autoPlay\n        muted\n        ref={videoElement}\n        src={urlState}\n      >\n        <source type={props.type} />\n        Your browser does not support the video tag.{fileState?.name}\n      </video>\n    </Fragment>\n  )\n}\n\nexport const VidStrmATor = (props: any) => {\n  const videoElement = useRef(null)\n  useEffect(() => {\n    const opts = {\n      autoplay: props.autoplay,\n      muted: true\n    }\n    let manageFile = (file: WebTorrent.TorrentFile) => {\n        // TODO: this better with more file types and upper and lower cases\n        if (file.name.includes('.mp4')) {\n          // @ts-ignore: Object is possibly 'null'.\n          file.renderTo(videoElement.current, opts, function (err, elem) {\n            if (err) throw err // file failed to download or display in the DOM\n            console.log('New DOM node with the content', elem)\n          })\n        }\n      },\n      mngTor = (torrent: WebTorrent.Torrent) => {\n        loopThroughTorFiles(torrent, manageFile)\n      }\n\n    GetTorrent(props.magnetLink, mngTor)\n    return () => {}\n  }, [])\n  return (\n    <Fragment>\n      <video\n        width={props.width}\n        height={props.height}\n        controls\n        muted\n        ref={videoElement}\n      >\n        <source type='video/mp4' />\n        Your browser does not support the video tag.\n      </video>\n    </Fragment>\n  )\n}\n\nexport const WrapATor = (props: any) => {\n  const { children } = props\n  let [childElements, updateChildElements] = useState<any>(),\n    mngTor = (torrent: WebTorrent.Torrent) => {\n      const chldElements = React.Children.map(children, (child) =>\n        React.cloneElement(child, {\n          torrent: torrent\n        })\n      )\n      updateChildElements(chldElements)\n    }\n\n  useEffect(() => {\n    GetTorrent(props.magnetLink, mngTor)\n    return () => {}\n  }, [])\n\n  return <Fragment>{childElements}</Fragment>\n}\n\nexport const WrappedImgATor = (props: any) => {\n  let [fileState, updateFile] = useState<WebTorrent.TorrentFile>(),\n    [urlState, updateUrl] = useState<string>(),\n    manageFile = (file: WebTorrent.TorrentFile) => {\n      // TODO: this better with more file types and upper and lower cases\n      updateFile(file)\n      file.getBlobURL((err, url) => {\n        if (err) throw err\n        updateUrl(url)\n      })\n    },\n    mngTor = (torrent: WebTorrent.Torrent) => {\n      loopThroughTorFiles(torrent, manageFile)\n    }\n\n  useEffect(() => {\n    mngTor(props.torrent)\n    return () => {}\n  }, [])\n  return (\n    <Fragment>\n      <img\n        src={urlState}\n        alt={fileState?.name}\n        width={props.width}\n        height={props.height}\n        sizes={props.sizes}\n        style={props.style}\n      />\n    </Fragment>\n  )\n}\n\n// https://stackoverflow.com/questions/51657890/is-it-ok-to-use-a-wrapper-component-to-pass-props-in-react\n","import React from 'react'\nimport { VidStrmATor, ImgATor, VidATor, WrapATor, WrappedImgATor } from 'atorable-react'\nimport 'atorable-react/dist/index.css'\nlet imgPath   = 'magnet:?xt=urn:btih:dc94d0d5b4a4ca82bbe4d335ddb65ef7ea3de374&dn=DSC4470.jpg&tr=udp%3A%2F%2Ftracker.leechers-paradise.org%3A6969&tr=udp%3A%2F%2Ftracker.coppersurfer.tk%3A6969&tr=udp%3A%2F%2Ftracker.opentrackr.org%3A1337&tr=udp%3A%2F%2Fexplodie.org%3A6969&tr=udp%3A%2F%2Ftracker.empire-js.us%3A1337&tr=wss%3A%2F%2Ftracker.btorrent.xyz&tr=wss%3A%2F%2Ftracker.openwebtorrent.com&ws=http%3A%2F%2Flocalhost%3A8080%2Fassets%2Fimg%2FDSC4470.jpg&xs=http%3A%2F%2Flocalhost%3A8080%2Fassets%2Fimg%2FDSC4470.torrent'\nlet sintel    = 'magnet:?xt=urn:btih:08ada5a7a6183aae1e09d831df6748d566095a10&dn=Sintel&tr=udp%3A%2F%2Fexplodie.org%3A6969&tr=udp%3A%2F%2Ftracker.coppersurfer.tk%3A6969&tr=udp%3A%2F%2Ftracker.empire-js.us%3A1337&tr=udp%3A%2F%2Ftracker.leechers-paradise.org%3A6969&tr=udp%3A%2F%2Ftracker.opentrackr.org%3A1337&tr=wss%3A%2F%2Ftracker.btorrent.xyz&tr=wss%3A%2F%2Ftracker.fastcast.nz&tr=wss%3A%2F%2Ftracker.openwebtorrent.com&ws=https%3A%2F%2Fwebtorrent.io%2Ftorrents%2F&xs=https%3A%2F%2Fwebtorrent.io%2Ftorrents%2Fsintel.torrent'\nlet oceanFish = 'magnet:?xt=urn:btih:17a613e4a81e52cf41cab72157a24faecaa8f2f5&dn=GOPR0093.mp4&tr=udp%3A%2F%2Ftracker.leechers-paradise.org%3A6969&tr=udp%3A%2F%2Ftracker.coppersurfer.tk%3A6969&tr=udp%3A%2F%2Ftracker.opentrackr.org%3A1337&tr=udp%3A%2F%2Fexplodie.org%3A6969&tr=udp%3A%2F%2Ftracker.empire-js.us%3A1337&tr=wss%3A%2F%2Ftracker.btorrent.xyz&tr=wss%3A%2F%2Ftracker.openwebtorrent.com&ws=http%3A%2F%2Flocalhost%3A8080%2Fassets%2Fimg%2FGOPR0093.mp4&xs=http%3A%2F%2Flocalhost%3A8080%2Fassets%2Fimg%2FGOPR0093.torrent'\n\nconst App = () => {\n  return (\n    <div>\n      <VidATor\n        width='320'\n        height='240'\n        type={'video/mp4'}\n        magnetLink={oceanFish}\n      />\n\n      <VidStrmATor\n        width='320'\n        height='240'\n        autoplay={true}\n        magnetLink={sintel}\n      />\n      <br />\n      <ImgATor magnetLink={imgPath} style={{ border: 'solid' }} />\n\n      <WrapATor magnetLink={imgPath}>\n        <WrappedImgATor />\n      </WrapATor>\n    </div>\n  )\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}