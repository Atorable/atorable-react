{"version":3,"file":"index.modern.js","sources":["../src/getTorrent.tsx","../src/index.tsx"],"sourcesContent":["/* eslint-disable one-var */\n/* eslint-disable prefer-const */\n// eslint-disable-next-line no-unused-vars\nimport WebTorrent, { Torrent } from 'webtorrent'\nconst client = new WebTorrent()\n\n// TODO: allow build to send file folders to nginx running with volumes mounted that get updated when sent to server\n// Make a service that gives you a .com address and then serves your webpack static code from a nginx server\n// just needs a simple template structure index.html, dist and such\n\nclient.on('error', function (t) {\n  console.log('err', t)\n})\n\nexport const GetTorrent = (\n  magnetURI: string | { default: string },\n  manageFile: (file: WebTorrent.TorrentFile) => void\n) => {\n  if (typeof magnetURI !== 'string') {\n    magnetURI = magnetURI.default\n  }\n  let torrentCheck = client.get(magnetURI)\n  if (torrentCheck) {\n    let torrent = torrentCheck\n    if (torrent.name) {\n      manageTorrent(torrent, manageFile)\n    } else {\n      client.on('torrent', function (t: WebTorrent.Torrent) {\n        if (torrent?.infoHash === t?.infoHash) {\n          manageTorrent(t, manageFile)\n        }\n      })\n    }\n  } else {\n    client.add(magnetURI, function (torrent: WebTorrent.Torrent) {\n      manageTorrent(torrent, manageFile)\n    })\n  }\n}\n\nexport const manageTorrent = (\n  torrent: Torrent,\n  manageFile: (file: WebTorrent.TorrentFile) => void\n) => {\n  torrent.files.forEach((file: WebTorrent.TorrentFile) => {\n    manageFile(file)\n  })\n}\n","/* eslint-disable one-var */\n/* eslint-disable prefer-const */\nimport * as React from 'react'\nimport { Fragment, useEffect, useState, useRef } from 'react'\n// eslint-disable-next-line no-unused-vars\nimport WebTorrent from 'webtorrent'\nimport { GetTorrent } from './getTorrent'\n\nexport const ImgATor = (props: any) => {\n  let [fileState, updateFile] = useState<WebTorrent.TorrentFile>(),\n    [urlState, updateUrl] = useState<string>(),\n    manageFile = (file: WebTorrent.TorrentFile) => {\n      // TODO: this better with more file types and upper and lower cases\n      updateFile(file)\n      file.getBlobURL((err, url) => {\n        if (err) throw err\n        updateUrl(url)\n      })\n    }\n\n  useEffect(() => {\n    GetTorrent(props.magnetLink, manageFile)\n    return () => {}\n  }, [])\n  return (\n    <Fragment>\n      <img\n        src={urlState}\n        alt={fileState?.name}\n        width={props.width}\n        height={props.height}\n        sizes={props.sizes}\n        style={props.style}\n      />\n    </Fragment>\n  )\n}\n\nexport const VidATor = (props: any) => {\n  const videoElement = useRef(null)\n  let [fileState, updateFile] = useState<WebTorrent.TorrentFile>(),\n    [urlState, updateUrl] = useState<string>(),\n    manageFile = (file: WebTorrent.TorrentFile) => {\n      // TODO: this better with more file types and upper and lower cases\n      updateFile(file)\n      file.getBlobURL((err, url) => {\n        if (err) throw err\n        updateUrl(url)\n      })\n    }\n\n  useEffect(() => {\n    GetTorrent(props.magnetLink, manageFile)\n    return () => {}\n  }, [])\n  return (\n    <Fragment>\n      {urlState ? (\n        <p style={{ color: 'green' }}>Ready</p>\n      ) : (\n        <p style={{ color: 'orange' }}>Loading</p>\n      )}\n      <video\n        width={props.width}\n        height={props.height}\n        controls\n        autoPlay\n        muted\n        ref={videoElement}\n        src={urlState}\n      >\n        <source type='video/mp4' />\n        Your browser does not support the video tag.{fileState?.name}\n      </video>\n    </Fragment>\n  )\n}\n\nexport const VidStrmATor = (props: any) => {\n  const videoElement = useRef(null)\n  useEffect(() => {\n    const opts = {\n      autoplay: props.autoplay,\n      muted: true\n    }\n    let manageFile = (file: WebTorrent.TorrentFile) => {\n      // TODO: this better with more file types and upper and lower cases\n      if (file.name.includes('.mp4')) {\n        // @ts-ignore: Object is possibly 'null'.\n        file.renderTo(videoElement.current, opts, function (err, elem) {\n          if (err) throw err // file failed to download or display in the DOM\n          console.log('New DOM node with the content', elem)\n        })\n      }\n\n    }\n    GetTorrent(props.magnetLink, manageFile)\n    return () => {}\n  }, [])\n  return (\n    <Fragment>\n      <video\n        width={props.width}\n        height={props.height}\n        controls\n        muted\n        ref={videoElement}\n      >\n        <source type='video/mp4' />\n        Your browser does not support the video tag.\n      </video>\n    </Fragment>\n  )\n}\n\n// import styles from './styles.module.css'\n// interface Props {\n//   text: string\n// }\n// export GetTorrent\n\n// export const ExampleComponent = ({ text }: Props) => {\n//   return <div className={styles.test}>Example Component: {text}</div>\n// }\n\n// export const WithLoading = (Component: typeof React.Component) => {\n//   return function WithLoadingComponent(\n//     { isLoading }: { isLoading: boolean },\n//     ...props: any[]\n//   ) {\n//     if (!isLoading) return <Component {...props} />\n//     return <p>Hold on, fetching data might take some time.</p>\n//   }\n// }\n\n// // sizing not controlled well\n// export const WebTorrentVidStrm2 = (props: any) => {\n//   const videoElement = useRef(null)\n//   useEffect(() => {\n//     const opts = {\n//       autoplay: true,\n//       muted: true,\n//       width: props.width,\n//       height: props.height\n//     }\n//     let manageFile = (file: WebTorrent.TorrentFile) => {\n//       // TODO: this better with more file types and upper and lower cases\n//       // updateFile(file)\n//       // @ts-ignore: Object is possibly 'null'.\n//       file.appendTo(videoElement.current, opts, function (err, elem) {\n//         if (err) throw err // file failed to download or display in the DOM\n//         console.log('New DOM node with the content', elem)\n//       })\n//     }\n//     GetTorrent(props.magnetLink, manageFile)\n//     return () => {}\n//   }, [])\n//   return (\n//     <Fragment>\n//       <p style={{ color: 'blue' }}>WebTorrentVidStrm2</p>\n//       <div ref={videoElement} />\n//       <p style={{ color: 'blue' }}>WebTorrentVidStrm2</p>\n//     </Fragment>\n//   )\n// }\n\n// Does not work\n// export const WebTorrentVidStrm3 = (props: any) => {\n//   const videoElement = useRef(null)\n//   let [fileState, updateFile] = useState<WebTorrent.TorrentFile>()\n//   useEffect(() => {\n//     let manageFile = (file: WebTorrent.TorrentFile) => {\n//       // TODO: this better with more file types and upper and lower cases\n//       updateFile(file)\n//       const videostream = new VideoStream(file, videoElement.current)\n//       // @ts-ignore: Object is possibly 'null'.\n//       videoElement.current.addEventListener('error', () => {\n//         // listen for errors on the video/audio element directly\n//         // const errorCode = elem.error\n//         const detailedError = videostream.detailedError\n//         console.log(detailedError)\n//         // videostream.detailedError will often have a more detailed error message\n//       })\n//     }\n//     GetTorrent(props.magnetLink, manageFile)\n//     return () => {}\n//   }, [])\n//   return (\n//     <Fragment>\n//       <video\n//         width={props.width}\n//         height={props.height}\n//         controls\n//         muted\n//         autoPlay\n//         ref={videoElement}\n//       >\n//         <source type='video/mp4' />\n//         Your browser does not support the video tag. {fileState?.name}\n//       </video>\n//     </Fragment>\n//   )\n// }\n"],"names":["client","WebTorrent","on","t","console","log","GetTorrent","magnetURI","manageFile","torrentCheck","get","torrent","name","manageTorrent","infoHash","add","files","forEach","file","ImgATor","props","useState","fileState","updateFile","urlState","updateUrl","getBlobURL","err","url","useEffect","magnetLink","React","Fragment","src","alt","width","height","sizes","style","VidATor","videoElement","useRef","color","controls","autoPlay","muted","ref","type","VidStrmATor","opts","autoplay","includes","renderTo","current","elem"],"mappings":"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"}