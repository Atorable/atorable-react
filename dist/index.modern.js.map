{"version":3,"file":"index.modern.js","sources":["../src/getTorrent.tsx","../src/Infinity.gif","../src/index.tsx"],"sourcesContent":["/* eslint-disable one-var */\n/* eslint-disable prefer-const */\n// eslint-disable-next-line no-unused-vars\nimport WebTorrent, { Torrent } from 'webtorrent'\nconst client = new WebTorrent()\n\n// TODO: allow build to send file folders to nginx running with volumes mounted that get updated when sent to server\n// Make a service that gives you a .com address and then serves your webpack static code from a nginx server\n// just needs a simple template structure index.html, dist and such\n\nclient.on('error', function (t) {\n  console.log('err', t)\n})\n\nexport const GetTorrent = (\n  magnetURI: string | { default: string },\n  manageTor: (file: WebTorrent.Torrent) => void\n) => {\n  if (typeof magnetURI !== 'string') {\n    magnetURI = magnetURI.default\n  }\n  let torrentCheck = client.get(magnetURI)\n  if (torrentCheck) {\n    let torrent = torrentCheck\n    if (torrent.name) {\n      manageTor(torrent)\n    } else {\n      client.on('torrent', function (t: WebTorrent.Torrent) {\n        if (torrent?.infoHash === t?.infoHash) {\n          manageTor(t)\n        }\n      })\n    }\n  } else {\n    client.add(magnetURI, function (torrent: WebTorrent.Torrent) {\n      manageTor(torrent)\n    })\n  }\n}\n\nexport const loopThroughTorFiles = (\n  torrent: Torrent,\n  manageFile: (file: WebTorrent.TorrentFile) => void\n) => {\n  torrent.files.forEach((file: WebTorrent.TorrentFile) => {\n    manageFile(file)\n  })\n}\n\nexport const PromiseTorrent = (magnetURI: string | { default: string }) => {\n  return new Promise((resolve: (file: WebTorrent.Torrent) => void) => {\n    if (typeof magnetURI !== 'string') {\n      magnetURI = magnetURI.default\n    }\n    let torrentCheck = client.get(magnetURI)\n    if (torrentCheck) {\n      let torrent = torrentCheck\n      if (torrent.name) {\n        resolve(torrent)\n      } else {\n        client.on('torrent', function (t: WebTorrent.Torrent) {\n          if (torrent?.infoHash === t?.infoHash) {\n            resolve(t)\n          }\n        })\n      }\n    } else {\n      client.add(magnetURI, function (torrent: WebTorrent.Torrent) {\n        resolve(torrent)\n      })\n    }\n  })\n}\n","/* loaded by smart-asset */\nexport default \"Infinity~vElNQthJ.gif\"","/* eslint-disable one-var */\n/* eslint-disable prefer-const */\nimport * as React from 'react'\nimport { Fragment, useEffect, useState, useRef } from 'react'\n// eslint-disable-next-line no-unused-vars\nimport WebTorrent from 'webtorrent'\nimport { GetTorrent, loopThroughTorFiles, PromiseTorrent } from './getTorrent'\nimport iGif from './Infinity.gif'\n\nexport const getTorrent = GetTorrent\nexport const promiseTorrent = PromiseTorrent\n\nexport const ImgATor = (props: any) => {\n  let [fileState, updateFile] = useState<WebTorrent.TorrentFile>(),\n    [urlState, updateUrl] = useState<string>(),\n    manageFile = (file: WebTorrent.TorrentFile) => {\n      // TODO: this better with more file types and upper and lower cases\n      updateFile(file)\n      file.getBlobURL((err, url) => {\n        if (err) throw err\n        updateUrl(url)\n      })\n    },\n    mngTor = (torrent: WebTorrent.Torrent) => {\n      loopThroughTorFiles(torrent, manageFile)\n    }\n\n  useEffect(() => {\n    PromiseTorrent(props.magnetLink).then(mngTor)\n    return () => {}\n  }, [])\n  return (\n    <Fragment>\n      <img\n        src={urlState}\n        alt={fileState?.name}\n        width={props.width}\n        height={props.height}\n        sizes={props.sizes}\n        style={props.style}\n      />\n    </Fragment>\n  )\n}\n\nexport const VidATor = (props: any) => {\n  const videoElement = useRef(null)\n  let [urlState, updateUrl] = useState<string>(),\n    // [fileState, updateFile] = useState<WebTorrent.TorrentFile>(),\n    manageFile = (file: WebTorrent.TorrentFile) => {\n      // TODO: this better with more file types and upper and lower cases\n      if (file.name.includes(props.type)) {\n        file.getBlobURL((err, url) => {\n          if (err) throw err\n          updateUrl(url)\n        })\n      }\n    },\n    mngTor = (torrent: WebTorrent.Torrent) => {\n      loopThroughTorFiles(torrent, manageFile)\n    }\n\n  useEffect(() => {\n    PromiseTorrent(props.magnetLink).then(mngTor)\n    return () => {}\n  }, [])\n  return (\n    <Fragment>\n      {urlState ? null : <h2 style={{ color: 'orange' }}>Loading</h2>}\n      <video\n        poster={iGif} // TODO: make this loading gif work\n        width={props.width}\n        height={props.height}\n        controls\n        autoPlay\n        muted\n        ref={videoElement}\n        src={urlState}\n      >\n        <source type={'video/' + props.type} />\n        Your browser does not support the video tag.\n      </video>\n    </Fragment>\n  )\n}\n\nexport const VidStrmATor = (props: any) => {\n  const videoElement = useRef(null)\n  const opts = {\n    autoplay: props.autoplay,\n    muted: true\n  }\n  let manageFile = (file: WebTorrent.TorrentFile) => {\n      // TODO: this better with more file types and upper and lower cases\n      if (file.name.includes('.mp4')) {\n        // @ts-ignore: Object is possibly 'null'.\n        file.renderTo(videoElement.current, opts, function (err, elem) {\n          if (err) throw err // file failed to download or display in the DOM\n          console.log('New DOM node with the content', elem)\n        })\n      }\n    },\n    mngTor = (torrent: WebTorrent.Torrent) => {\n      loopThroughTorFiles(torrent, manageFile)\n    }\n\n  useEffect(() => {\n    PromiseTorrent(props.magnetLink).then(mngTor)\n    return () => {}\n  }, [])\n  return (\n    <Fragment>\n      <video\n        width={props.width}\n        height={props.height}\n        controls\n        muted\n        ref={videoElement}\n      >\n        <source type='video/mp4' />\n        Your browser does not support the video tag.\n      </video>\n    </Fragment>\n  )\n}\n\nexport const WrapATor = (props: any) => {\n  const { children } = props\n  let [childElements, updateChildElements] = useState<any>(),\n    mngTor = (torrent: WebTorrent.Torrent) => {\n      const chldElements = React.Children.map(children, (child) =>\n        React.cloneElement(child, {\n          torrent: torrent\n        })\n      )\n      updateChildElements(chldElements)\n    }\n\n  useEffect(() => {\n    PromiseTorrent(props.magnetLink).then(mngTor)\n    return () => {}\n  }, [])\n\n  return <Fragment>{childElements}</Fragment>\n}\n\nexport const WrappedImgATor = (props: any) => {\n  let [fileState, updateFile] = useState<WebTorrent.TorrentFile>(),\n    [urlState, updateUrl] = useState<string>(),\n    manageFile = (file: WebTorrent.TorrentFile) => {\n      // TODO: this better with more file types and upper and lower cases\n      updateFile(file)\n      file.getBlobURL((err, url) => {\n        if (err) throw err\n        updateUrl(url)\n      })\n    },\n    mngTor = (torrent: WebTorrent.Torrent) => {\n      loopThroughTorFiles(torrent, manageFile)\n    }\n\n  useEffect(() => {\n    mngTor(props.torrent)\n    return () => {}\n  }, [])\n  return (\n    <Fragment>\n      <img\n        src={urlState}\n        alt={fileState?.name}\n        width={props.width}\n        height={props.height}\n        sizes={props.sizes}\n        style={props.style}\n      />\n    </Fragment>\n  )\n}\n\n// https://stackoverflow.com/questions/51657890/is-it-ok-to-use-a-wrapper-component-to-pass-props-in-react\n"],"names":["client","WebTorrent","on","t","console","log","GetTorrent","magnetURI","manageTor","default","torrentCheck","get","torrent","name","infoHash","add","loopThroughTorFiles","manageFile","files","forEach","file","PromiseTorrent","Promise","resolve","getTorrent","promiseTorrent","ImgATor","props","fileState","updateFile","useState","urlState","updateUrl","getBlobURL","err","url","mngTor","useEffect","magnetLink","then","React","Fragment","src","alt","width","height","sizes","style","VidATor","videoElement","useRef","includes","type","color","poster","iGif","controls","autoPlay","muted","ref","VidStrmATor","opts","autoplay","renderTo","current","elem","WrapATor","children","childElements","updateChildElements","chldElements","map","child","WrappedImgATor"],"mappings":"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"}